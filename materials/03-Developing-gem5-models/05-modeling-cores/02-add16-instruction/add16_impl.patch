From b57ea5fdcd57107cdf35b0b76bbd8b68a895e630 Mon Sep 17 00:00:00 2001
From: "Bobby R. Bruce" <bbruce@ucdavis.edu>
Date: Wed, 24 Jul 2024 05:28:15 -0700
Subject: arch-riscv: Add the `ADD16` instruction

Change-Id: I4f47ad7066427a1e399bb08e716fbe56193d3d56
---
 src/arch/riscv/isa/decoder.isa | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/src/arch/riscv/isa/decoder.isa b/src/arch/riscv/isa/decoder.isa
index 0eb10d89b2..2807410f3e 100644
--- a/src/arch/riscv/isa/decoder.isa
+++ b/src/arch/riscv/isa/decoder.isa
@@ -2054,6 +2054,28 @@ decode QUADRANT default Unknown::unknown() {
             Rd = (sext<20>(imm) << 12);
         }});

+        0x1d: decode FUNCT3 {
+            format ROp {
+                0x0: decode FUNCT7 {
+                    0x20: add16({{
+                        uint16_t Rd_16 = (uint16_t)(Rs1_ud) +
+                                                    (uint16_t)(Rs2_ud);
+                        uint16_t Rd_32 = (uint16_t)((Rs1_ud >> 16) +
+                                                    (Rs2_ud >> 16));
+                        uint16_t Rd_48 = (uint16_t)((Rs1_ud >> 32) +
+                                                    (Rs2_ud >> 32));
+                        uint16_t Rd_64 = (uint16_t)((Rs1_ud >> 48) +
+                                                    (Rs2_ud >> 48));
+                        uint64_t result = Rd_64;
+                        result = result << 16 | Rd_48;
+                        result = result << 16 | Rd_32;
+                        result = result << 16 | Rd_16;
+                        Rd = result;
+
+                    }}, IntAluOp);
+                            }
+            }
+        }
         0x0e: decode RVTYPE {
             0x1: decode FUNCT3 {
                 format ROp {
--
2.45.2

